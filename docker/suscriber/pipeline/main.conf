input {
    rabbitmq {
        host => "rabbitmq"
        port => 5672
        vhost => "/"
        queue => "httpd"
        exchange => "honeypot"
        exchange_type => "topic"
        ack => true
        durable => false
    }
}
filter {
  json {
    source => "message"
  }
  if [headers][Host] {
    mutate {
      add_field => { "hostname" => "%{[headers][Host]}" }
      convert => {
        "hostname" => "string"
      }
    }
  }
  if [headers][User-Agent] {
    mutate {
      add_field => { "UserAgent" => "%{[headers][User-Agent]}" }
      convert => {
        "UserAgent" => "string"
      }
    }
  }
  if [headers][Accept-Language] {
    mutate {
      add_field => { "AcceptLanguage" => "%{[headers][Accept-Language]}" }
      convert => {
        "AcceptLanguage" => "string"
      }
    }
  }
  mutate {
    remove_field => ["headers"]
    remove_field => ["event"]
    remove_field => ["host"]
  }

  date {
    match => [ "asctime", "ISO8601", "YYYY-MM-dd HH:mm:ss,SSS"]
  }

  if [!hostname] {
      mutate {add_field => {"hostname" => ""} }
  }

  if [hostname]{
    translate {
      field => "hostname"
      destination => "host_info"
      add_tag => [ "whitelist" ]
      dictionary_path => "/usr/share/logstash/translate/alexa-top-1m.csv"
      override => "false"
      refresh_interval => 36000
    }
  }

  if [src_ip]{
    # maltrail
    translate {
      field => "src_ip"
      destination => "src_ip_info"
      add_tag => [ "blocklist" ]
      dictionary_path => "/data/maltrail/blocklist.csv"
      override => "false"
      refresh_interval => 36000
    }
    # firehol
    translate {
      field => "src_ip"
      destination => "src_ip_info"
      add_tag => [ "proxy" ]
      dictionary_path => "/usr/share/logstash/translate/proxy.csv"
      override => "false"
      refresh_interval => 36000
    }
    translate {
      field => "src_ip"
      destination => "src_ip_info"
      add_tag => [ "spam" ]
      dictionary_path => "/usr/share/logstash/translate/spam.csv"
      override => "false"
      refresh_interval => 36000
    }
    translate {
      field => "src_ip"
      destination => "src_ip_info"
      add_tag => [ "c2" ]
      dictionary_path => "/usr/share/logstash/translate/c2.csv"
      override => "false"
      refresh_interval => 36000
    }
    translate {
      field => "src_ip"
      destination => "src_ip_info"
      add_tag => [ "attacker" ]
      dictionary_path => "/usr/share/logstash/translate/attacker.csv"
      override => "false"
      refresh_interval => 36000
    }


    # geoip
    geoip {
      source => "src_ip"
      target => "src_geo"
      database => "/usr/share/logstash/geoip/GeoLite2-City.mmdb"
      default_database_type => "City"
    }
    geoip {
      source => "src_ip"
      target => "src_geo"
      database => "/usr/share/logstash/geoip/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
    }
  }
  if [dst_ip]{
    translate {
      field => "dst_ip"
      destination => "dst_ip_info"
      add_tag => [ "blocklist" ]
      dictionary_path => "/data/maltrail/blocklist.csv"
      override => "false"
      refresh_interval => 36000
    }
    #geoip {
    #  source => "dst_ip"
    #  target => "dst_geo"
    #  database => "/usr/share/logstash/geoip/GeoLite2-City.mmdb"
    #  default_database_type => "City"
    #}
    #geoip {
    #  source => "dst_ip"
    #  target => "dst_geo"
    #  database => "/usr/share/logstash/geoip/GeoLite2-ASN.mmdb"
    #  default_database_type => "ASN"
    #}
  }

}
output {
  rabbitmq {
    host => "rabbitmq"
    exchange => "index"
    exchange_type => "topic"
    durable => false
  }
}
